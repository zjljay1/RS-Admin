<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lzx.system.mapper.SysRoleMapper">

    <!-- resultMap映射 -->
    <resultMap id="BaseResultMap" type="org.lzx.common.domain.entity.SysRole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_code" property="roleCode" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="role_desc" property="roleDesc" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_id" property="updateId" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
        <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- SQL片段，列出表的所有基础字段 -->
    <sql id="baseColumns">
        t.id,
        t.role_name,
        t.role_code,
        t.status,
        t.role_desc,
        t.type,
        t.create_id,
        t.create_by,
        t.update_id,
        t.update_by,
        t.create_time,
        t.update_time,
        t.is_deleted,
        t.delete_time
    </sql>

    <select id="getUserRole" resultType="java.lang.String" parameterType="java.lang.String">
        select role_name from sys_role tsr where tsr.id in (select role_id from sys_user_role where user_id = ${id})
    </select>


    <insert id="addRole" parameterType="org.lzx.common.domain.entity.SysRole">
        insert into sys_role(
        <if test="roleName != null and roleName != ''">
            role_name,
        </if>
        <if test="roleCode != null">
            role_code,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="roleDesc != null">
            role_desc,
        </if>
        <if test="type != null">
            type,
        </if>
        <if test="createId != null and createId != ''">
            create_id,
        </if>
        <if test="createBy != null and createBy != ''">
            create_by,
        </if>
        <if test="updateId != null and updateId != ''">
            update_id,
        </if>
        <if test="updateBy != null and updateBy != ''">
            update_by,
        </if>
        <if test="updateTime != null">
            update_time,
        </if>
        <if test="isDeleted != null and isDeleted != ''">
            is_deleted,
        </if>
        <if test="deleteTime != null ">
            delete_time,
        </if>
        create_time
        )values(
        <if test="roleName != null and roleName != ''">
            #{roleName},
        </if>
        <if test="roleCode != null and roleCode != ''">
            #{roleCode},
        </if>
        <if test="status != null">
            #{status},
        </if>
        <if test="roleDesc != null and roleDesc != ''">
            #{roleDesc},
        </if>
        <if test="type != null">
            #{type},
        </if>
        <if test="createId != null">
            #{createId},
        </if>
        <if test="createBy != null and createBy != ''">
            #{createBy},
        </if>
        <if test="updateId != null and updateId != ''">
            #{updateId},
        </if>
        <if test="updateBy != null and updateBy != ''">
            #{updateBy},
        </if>
        <if test="updateTime != null">
            #{updateTime},
        </if>
        <if test="isDeleted != null and isDeleted != ''">
            #{isDeleted},
        </if>
        <if test="deleteTime != null">
            #{deleteTime},
        </if>
        sysdate()
        )
    </insert>

    <delete id="removeRoleByIds" parameterType="Long">
        update sys_role set is_deleted = '1',delete_time = sysdate() where role_id in
        <foreach collection="array" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <select id="checkRoleNameUnique" parameterType="String" resultMap="BaseResultMap">
        select
            <include refid="baseColumns"/>
        from sys_role as t
        where t.role_name = #{roleName} and is_deleted = 0
    </select>

</mapper>